-- 1번
-- 학생이름과 주소지 조회
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT 
ORDER BY STUDENT_NAME ;

-- 2번
-- 휴학중인 학생들의 이름과 주민번호를 나이 적은 순서대로
SELECT STUDENT_NAME, STUDENT_SSN 
FROM TB_STUDENT 
WHERE TB_STUDENT.ABSENCE_YN = 'Y'
ORDER BY STUDENT_SSN DESC;

-- 3번
-- 주소지 강원도 OR 경기도 중 1900년대 학번을 가진 학생 조회
-- 이름, 학번, 주소를 이름 오름차순으로
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT 
WHERE STUDENT_ADDRESS LIKE '강원%' AND STUDENT_ADDRESS LIKE '경기도%'
OR STUDENT_NO NOT LIKE 'A%'
ORDER BY STUDENT_NAME ;

-- 4번
-- 법학과 교수의 이름, 주민번호를 나이가 많은 순서로 조회
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR 
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO 
											 FROM TB_DEPARTMENT 
											 WHERE DEPARTMENT_NAME = '법학과')
ORDER BY PROFESSOR_SSN;
	
-- 5번
-- 2004년 2학기에 C3118100 과목을 수강한 학생의 학점 조회
-- 학점 높은 학생부터 표시, 학점 같으면 학번 낮은 학생순서로
SELECT STUDENT_NO, TO_CHAR(POINT, 'FM9.00') 학점
FROM TB_STUDENT 
JOIN TB_GRADE USING(STUDENT_NO)
WHERE TERM_NO = '200402'
AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO ;

-- 6번
-- 학번, 이름, 학과 이름을 학생 이름 오름차순으로
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7번
-- 과목 이름, 해당 과목을 수업하는 학과 이름 조회
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS 
JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);

-- 8번
-- 과목, 해당 교수 이름 조회
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS C, TB_PROFESSOR tp 
JOIN TB_CLASS_PROFESSOR tcp USING(CLASS_NO)
WHERE tp.PROFESSOR_NO = tcp.PROFESSOR_NO ;

-- 9번
-- 인문 사회 계열에 속한 과목명, 교수이름을 과목명 오름차순으로 조회
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS_PROFESSOR 
JOIN TB_CLASS USING (CLASS_NO)
JOIN TB_PROFESSOR USING (PROFESSOR_NO)
WHERE DEPARTMENT_NO = (
	SELECT DEPARTMENT_NO 
	FROM TB_DEPARTMENT 
	WHERE CATEGORY ='인문 사회')	
ORDER BY CLASS_NAME;

-- 18번
-- 국어국문학과에서 총 평점이 가장 높은 학생의 이름과 학번 조회
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT 
JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (STUDENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
AND POINT = (
	SELECT MAX(POINT)
	FROM TB_GRADE 
);


-- 19번
-- '환경조경학과'가 속한 같은 계열 학과들의 학과 별 전공과목 평점 파악을 위한 SQL 작성
-- 평점은 소수점 첫째자리까지 반올림하여 표시
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT), 1) 전공평점
FROM TB_DEPARTMENT 
JOIN TB_CLASS USING (DEPARTMENT_NO)
JOIN TB_GRADE USING (CLASS_NO)
WHERE CATEGORY = (
	SELECT CATEGORY
	FROM TB_DEPARTMENT 
	WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME;








